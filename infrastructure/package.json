{
    "name": "balancer-v3-backend-infrastructure",
    "version": "1.0.0",
    "description": "AWS CDK infrastructure for Balancer v3 Backend",
    "main": "lib/app.js",
    "private": true,
    "engines": {
        "node": "^18.0.0",
        "npm": ">=8.0.0"
    },
    "scripts": {
        "build": "tsc",
        "build:clean": "rm -rf dist && tsc",
        "clean": "rm -rf dist && find . -name '*.js' -not -path './node_modules/*' -not -path './cdk.out/*' -delete && find . -name '*.d.ts' -not -path './node_modules/*' -not -path './cdk.out/*' -delete",
        "watch": "tsc -w",
        "test": "jest",
        "test:unit": "jest test/unit test/config",
        "test:security": "jest test/security",
        "test:integration": "jest --config jest.integration.config.js",
        "test:deployment": "scripts/test-deployment-scenarios.sh",
        "test:deployment:quick": "scripts/test-deployment-scenarios.sh quick",
        "test:deployment:env": "scripts/test-deployment-scenarios.sh env",
        "test:deployment:iam": "scripts/test-deployment-scenarios.sh iam",
        "test:deployment:database": "scripts/test-deployment-scenarios.sh database",
        "test:all": "npm run test:unit && npm run test:integration",
        "test:watch": "jest --watch",
        "test:coverage": "jest --coverage",
        "test:ci": "jest --ci --coverage --watchAll=false",
        "localstack:start": "docker compose -f test/docker-compose.localstack.yml up -d",
        "localstack:stop": "docker compose -f test/docker-compose.localstack.yml down",
        "localstack:logs": "docker compose -f test/docker-compose.localstack.yml logs -f localstack",
        "localstack:clean": "docker compose -f test/docker-compose.localstack.yml down -v",
        "cdk": "cdk",
        "deploy": "cdk deploy",
        "destroy": "cdk destroy",
        "synth": "cdk synth",
        "diff": "cdk diff",
        "bootstrap": "cdk bootstrap",
        "deploy:dev": "ENVIRONMENT=development ts-node scripts/deploy-sequential.ts",
        "deploy:staging": "ENVIRONMENT=staging ts-node scripts/deploy-sequential.ts",
        "deploy:prod": "ENVIRONMENT=production ts-node scripts/deploy-sequential.ts",
        "destroy:dev": "ts-node scripts/destroy-with-cleanup.ts development",
        "destroy:staging": "ts-node scripts/destroy-with-cleanup.ts staging",
        "destroy:dev:force": "cdk destroy --all -c environment=development --force",
        "destroy:staging:force": "cdk destroy --all -c environment=staging --force",
        "synth:dev": "cdk synth --all -c environment=development",
        "synth:staging": "cdk synth --all -c environment=staging",
        "synth:prod": "cdk synth --all -c environment=production",
        "diff:dev": "cdk diff --all -c environment=development",
        "diff:staging": "cdk diff --all -c environment=staging",
        "diff:prod": "cdk diff --all -c environment=production",
        "check-status": "ts-node scripts/check-status.ts",
        "check-status:dev": "ts-node scripts/check-status.ts --env development",
        "check-status:staging": "ts-node scripts/check-status.ts --env staging",
        "check-status:prod": "ts-node scripts/check-status.ts --env production",
        "check-status:dev:quiet": "ts-node scripts/check-status.ts --env development --quiet",
        "check-status:staging:quiet": "ts-node scripts/check-status.ts --env staging --quiet",
        "check-status:prod:quiet": "ts-node scripts/check-status.ts --env production --quiet",
        "check-status:dev:yaml": "ts-node scripts/check-status.ts --env development --yaml",
        "check-status:staging:yaml": "ts-node scripts/check-status.ts --env staging --yaml",
        "check-status:prod:yaml": "ts-node scripts/check-status.ts --env production --yaml",
        "check-status:dev:summary": "ts-node scripts/check-status.ts --env development --summary",
        "check-status:staging:summary": "ts-node scripts/check-status.ts --env staging --summary",
        "check-status:prod:summary": "ts-node scripts/check-status.ts --env production --summary",
        "diagnose-rollback": "ts-node scripts/diagnose-rollback.ts",
        "diagnose-rollback:dev": "ts-node scripts/diagnose-rollback.ts --env development",
        "diagnose-rollback:staging": "ts-node scripts/diagnose-rollback.ts --env staging",
        "diagnose-rollback:prod": "ts-node scripts/diagnose-rollback.ts --env production",
        "rollback:dev": "ts-node scripts/rollback-deployment.ts --env development",
        "rollback:staging": "ts-node scripts/rollback-deployment.ts --env staging",
        "rollback:prod": "ts-node scripts/rollback-deployment.ts --env production",
        "fix-dev-rollback": "ts-node scripts/fix-development-rollback.ts",
        "validate": "ts-node scripts/pre-deployment-validator.ts",
        "validate:dev": "ts-node scripts/pre-deployment-validator.ts --env development",
        "validate:staging": "ts-node scripts/pre-deployment-validator.ts --env staging",
        "validate:prod": "ts-node scripts/pre-deployment-validator.ts --env production",
        "health-check:dev": "ts-node scripts/pre-deployment-health-check.ts development",
        "health-check:staging": "ts-node scripts/pre-deployment-health-check.ts --env staging",
        "health-check:prod": "ts-node scripts/pre-deployment-health-check.ts --env production",
        "monitor": "ts-node scripts/deployment-monitor.ts",
        "monitor:dev": "ts-node scripts/deployment-monitor.ts --env development",
        "monitor:staging": "ts-node scripts/deployment-monitor.ts --env staging",
        "monitor:prod": "ts-node scripts/deployment-monitor.ts --env production",
        "monitor:continuous": "ts-node scripts/deployment-monitor.ts --continuous",
        "monitor:dev:continuous": "ts-node scripts/deployment-monitor.ts --env development --continuous",
        "monitor:staging:continuous": "ts-node scripts/deployment-monitor.ts --env staging --continuous",
        "monitor:prod:continuous": "ts-node scripts/deployment-monitor.ts --env production --continuous",
        "monitor:dev:deployment": "ts-node scripts/deployment-monitor.ts --env development --deployment",
        "monitor:staging:deployment": "ts-node scripts/deployment-monitor.ts --env staging --deployment",
        "monitor:prod:deployment": "ts-node scripts/deployment-monitor.ts --env production --deployment",
        "fix-stuck-stack": "ts-node scripts/fix-stuck-stack.ts",
        "fix-stuck-stack:dev": "ts-node scripts/fix-stuck-stack.ts --environment development",
        "fix-stuck-stack:staging": "ts-node scripts/fix-stuck-stack.ts --environment staging",
        "fix-stuck-stack:prod": "ts-node scripts/fix-stuck-stack.ts --environment production",
        "ts-node": "ts-node",
        "deploy:sequential": "ts-node scripts/deploy-sequential.ts",
        "deploy:recovery": "ts-node scripts/deploy-with-recovery.ts",
        "deploy:dev:recovery": "ENVIRONMENT=development ts-node scripts/deploy-with-recovery.ts",
        "deploy:staging:recovery": "ENVIRONMENT=staging ts-node scripts/deploy-with-recovery.ts",
        "deploy:prod:recovery": "ENVIRONMENT=production ts-node scripts/deploy-with-recovery.ts",
        "deploy:test": "ts-node scripts/deploy-sequential.ts --dry-run",
        "deploy:dev:code-only": "ts-node scripts/deploy-code-only.ts --environment development",
        "deploy:staging:code-only": "ts-node scripts/deploy-code-only.ts --environment staging",
        "deploy:prod:code-only": "ts-node scripts/deploy-code-only.ts --environment production",
        "track-version:dev": "ts-node scripts/track-infrastructure-version.ts development",
        "track-version:staging": "ts-node scripts/track-infrastructure-version.ts staging", 
        "track-version:prod": "ts-node scripts/track-infrastructure-version.ts production",
        "deploy:dev:parallel": "ENVIRONMENT=development ts-node scripts/deploy-sequential.ts --parallel",
        "deploy:staging:parallel": "ENVIRONMENT=staging ts-node scripts/deploy-sequential.ts --parallel",
        "deploy:prod:parallel": "ENVIRONMENT=production ts-node scripts/deploy-sequential.ts --parallel",
        "dashboard": "ts-node scripts/infrastructure-dashboard.ts",
        "dashboard:dev": "ts-node scripts/infrastructure-dashboard.ts --env development",
        "dashboard:staging": "ts-node scripts/infrastructure-dashboard.ts --env staging",
        "dashboard:prod": "ts-node scripts/infrastructure-dashboard.ts --env production",
        "dashboard:watch": "ts-node scripts/infrastructure-dashboard.ts --watch",
        "dashboard:dev:watch": "ts-node scripts/infrastructure-dashboard.ts --env development --watch",
        "dashboard:debug": "ts-node scripts/infrastructure-dashboard.ts --debug",
        "dashboard:dev:debug": "ts-node scripts/infrastructure-dashboard.ts --env development --debug",
        "logs:dev:follow": "ts-node scripts/live-tail-logs.ts --env development --follow",
        "logs:staging:follow": "ts-node scripts/live-tail-logs.ts --env staging --follow",
        "logs:prod:follow": "ts-node scripts/live-tail-logs.ts --env production --follow",
        "debug-logs:dev": "ts-node scripts/debug-log-forwarding.ts --env development",
        "debug-logs:staging": "ts-node scripts/debug-deployment-logs.ts --env staging",
        "debug-logs:prod": "ts-node scripts/debug-deployment-logs.ts --env production",
        "validate-separation": "ts-node scripts/validate-separation.ts",
        "validate-separation:dev": "ts-node scripts/validate-separation.ts --environment development",
        "validate-separation:staging": "ts-node scripts/validate-separation.ts --environment staging",
        "validate-separation:prod": "ts-node scripts/validate-separation.ts --environment production",
        "debug-logs": "ts-node scripts/debug-log-forwarding.ts",
        "debug-logs:summary": "ts-node scripts/debug-log-forwarding.ts --summary",
        "debug-logs:json": "ts-node scripts/debug-log-forwarding.ts --json",
        "health-check": "ts-node scripts/pre-deployment-health-check.ts",
        "health-check:auto-fix": "ts-node scripts/pre-deployment-health-check.ts --auto-fix",
        "health-check:fast": "ts-node scripts/pre-deployment-health-check.ts --auto-fix --skip-ecs-after-rollback",
        "health-check:dev:fast": "ts-node scripts/pre-deployment-health-check.ts development --auto-fix --skip-ecs-after-rollback",
        "logs": "ts-node scripts/live-tail-logs.ts",
        "logs:dev": "ts-node scripts/live-tail-logs.ts --env development",
        "logs:staging": "ts-node scripts/live-tail-logs.ts --env staging",
        "logs:prod": "ts-node scripts/live-tail-logs.ts --env production",
        "logs:follow": "ts-node scripts/live-tail-logs.ts --follow",
        "logs:api": "ts-node scripts/live-tail-logs.ts --services api",
        "logs:api:follow": "ts-node scripts/live-tail-logs.ts --services api --follow",
        "cancel-update": "ts-node scripts/cancel-stack-update.ts",
        "cancel-update:dev": "ts-node scripts/cancel-stack-update.ts --environment development",
        "cancel-update:staging": "ts-node scripts/cancel-stack-update.ts --environment staging",
        "cancel-update:prod": "ts-node scripts/cancel-stack-update.ts --environment production",
        "fix-stuck-stack:dry-run": "ts-node scripts/fix-stuck-stack.ts --dry-run",
        "inspect-env-vars": "ts-node scripts/inspect-env-vars.ts",
        "inspect-env-vars:dev": "ts-node scripts/inspect-env-vars.ts --env development",
        "inspect-env-vars:staging": "ts-node scripts/inspect-env-vars.ts --env staging",
        "inspect-env-vars:prod": "ts-node scripts/inspect-env-vars.ts --env production",
        "inspect-env-vars:dev:json": "ts-node scripts/inspect-env-vars.ts --env development --json",
        "inspect-env-vars:staging:json": "ts-node scripts/inspect-env-vars.ts --env staging --json",
        "inspect-env-vars:prod:json": "ts-node scripts/inspect-env-vars.ts --env production --json",
        "inspect-env-vars:dev:compact": "ts-node scripts/inspect-env-vars.ts --env development --compact",
        "inspect-env-vars:staging:compact": "ts-node scripts/inspect-env-vars.ts --env staging --compact",
        "inspect-env-vars:prod:compact": "ts-node scripts/inspect-env-vars.ts --env production --compact",
        "inspect-env-vars:secrets": "ts-node scripts/inspect-env-vars.ts --filter '*SECRET*,*PASSWORD*,*TOKEN*,*KEY*'",
        "inspect-env-vars:database": "ts-node scripts/inspect-env-vars.ts --filter 'DATABASE_*,DB_*,*_URL'",
        "inspect-env-vars:api": "ts-node scripts/inspect-env-vars.ts --filter '*API*,*TOKEN*,*AUTH*'",
        "show-config-template": "ts-node scripts/show-config-template.ts",
        "show-config-template:all": "ts-node scripts/show-config-template.ts all",
        "validate-config": "ts-node scripts/validate-config-consistency.ts",
        "validate-config:dev": "ts-node scripts/validate-config-consistency.ts --env development",
        "validate-config:staging": "ts-node scripts/validate-config-consistency.ts --env staging",
        "validate-config:prod": "ts-node scripts/validate-config-consistency.ts --env production",
        "validate-config:all": "ts-node scripts/validate-config-consistency.ts --all",
        "validate-config:ci": "ts-node scripts/validate-config-consistency.ts --ci",
        "watch-deployment": "ts-node scripts/watch-deployment.ts",
        "watch-deployment:dev": "ts-node scripts/watch-deployment.ts --environment development",
        "watch-deployment:staging": "ts-node scripts/watch-deployment.ts --environment staging",
        "watch-deployment:prod": "ts-node scripts/watch-deployment.ts --environment production",
        "watch-deployment:compute": "ts-node scripts/watch-deployment.ts --environment development --stack v3-backend-development-compute",
        "watch-deployment:ecs": "ts-node scripts/watch-deployment.ts --environment development --ecs",
        "watch-deployment:dev:ecs": "ts-node scripts/watch-deployment.ts --environment development --ecs",
        "dump-environment": "ts-node scripts/dump-environment.ts",
        "dump-environment:dev": "ts-node scripts/dump-environment.ts --environment development",
        "dump-environment:staging": "ts-node scripts/dump-environment.ts --environment staging",
        "dump-environment:prod": "ts-node scripts/dump-environment.ts --environment production",
        "dump-environment:dev:full": "ts-node scripts/dump-environment.ts --environment development --include-secrets --include-logs",
        "dump-environment:staging:full": "ts-node scripts/dump-environment.ts --environment staging --include-secrets --include-logs",
        "dump-environment:prod:full": "ts-node scripts/dump-environment.ts --environment production --include-secrets --include-logs",
        "dlq": "scripts/dlq-utilities.sh",
        "dlq:dev": "scripts/dlq-utilities.sh development",
        "dlq:staging": "scripts/dlq-utilities.sh staging",
        "dlq:prod": "scripts/dlq-utilities.sh production",
        "dlq:local": "scripts/dlq-utilities.sh",
        "dlq:status:dev": "scripts/dlq-utilities.sh development status",
        "dlq:status:staging": "scripts/dlq-utilities.sh staging status",
        "dlq:status:prod": "scripts/dlq-utilities.sh production status",
        "dlq:purge:dev": "scripts/dlq-utilities.sh development purge",
        "dlq:purge:staging": "scripts/dlq-utilities.sh staging purge",
        "dlq:purge:prod": "scripts/dlq-utilities.sh production purge",
        "dlq:drain:dev": "scripts/dlq-utilities.sh development drain",
        "dlq:drain:staging": "scripts/dlq-utilities.sh staging drain",
        "dlq:drain:prod": "scripts/dlq-utilities.sh production drain",
        "promotion:record": "ts-node scripts/promotion-tracker.ts record",
        "promotion:current": "ts-node scripts/promotion-tracker.ts current",
        "promotion:current:dev": "ts-node scripts/promotion-tracker.ts current dev",
        "promotion:current:staging": "ts-node scripts/promotion-tracker.ts current staging",
        "promotion:current:prod": "ts-node scripts/promotion-tracker.ts current production",
        "promotion:audit": "ts-node scripts/promotion-tracker.ts audit",
        "promotion:audit:dev": "ts-node scripts/promotion-tracker.ts audit dev",
        "promotion:audit:staging": "ts-node scripts/promotion-tracker.ts audit staging",
        "promotion:audit:prod": "ts-node scripts/promotion-tracker.ts audit production",
        "promotion:validate": "ts-node scripts/promotion-tracker.ts validate",
        "test:build-deploy-flow": "ts-node scripts/test-build-deploy-flow.ts",
        "test:build-local": "scripts/test-build-locally.sh",
        "test:image-metadata": "scripts/test-image-metadata.sh",
        "diagnose:deployment": "ts-node scripts/deployment-diagnosis.ts",
        "diagnose:deployment:dev": "ts-node scripts/deployment-diagnosis.ts --environment development",
        "diagnose:deployment:staging": "ts-node scripts/deployment-diagnosis.ts --environment staging",
        "diagnose:deployment:prod": "ts-node scripts/deployment-diagnosis.ts --environment production",
        "get-cert-validation": "ts-node scripts/get-certificate-validation-records.ts",
        "get-cert-validation:dev": "ts-node scripts/get-certificate-validation-records.ts development",
        "get-cert-validation:staging": "ts-node scripts/get-certificate-validation-records.ts staging",
        "get-cert-validation:prod": "ts-node scripts/get-certificate-validation-records.ts production",
        "dns-settings": "ts-node scripts/get-dns-settings.ts",
        "dns-settings:dev": "ts-node scripts/get-dns-settings.ts development",
        "dns-settings:staging": "ts-node scripts/get-dns-settings.ts staging",
        "dns-settings:prod": "ts-node scripts/get-dns-settings.ts production",
        "dns-settings:dev:json": "ts-node scripts/get-dns-settings.ts development --json",
        "dns-settings:staging:json": "ts-node scripts/get-dns-settings.ts staging --json",
        "dns-settings:prod:json": "ts-node scripts/get-dns-settings.ts production --json",
        "dns-settings:instructions": "ts-node scripts/get-dns-settings.ts development --instructions",
        "validate:build": "ts-node scripts/validate-build.ts",
        "validate:build:verbose": "ts-node scripts/validate-build.ts --verbose",
        "validate:build:continue": "ts-node scripts/validate-build.ts --continue-on-error",
        "infra-state": "ts-node scripts/infrastructure-state-manager.ts",
        "infra-state:analyze": "ts-node scripts/infrastructure-state-manager.ts --analyze",
        "infra-state:cleanup": "ts-node scripts/infrastructure-state-manager.ts --cleanup",
        "infra-state:cleanup:dry": "ts-node scripts/infrastructure-state-manager.ts --cleanup --dry-run",
        "infra-state:cleanup:force": "ts-node scripts/infrastructure-state-manager.ts --cleanup --force",
        "infra-state:dev": "ts-node scripts/infrastructure-state-manager.ts development",
        "infra-state:staging": "ts-node scripts/infrastructure-state-manager.ts staging",
        "infra-state:prod": "ts-node scripts/infrastructure-state-manager.ts production",
        "deploy:state-aware": "ts-node scripts/deploy-with-state-management.ts",
        "deploy:state-aware:dev": "ENVIRONMENT=development ts-node scripts/deploy-with-state-management.ts",
        "deploy:state-aware:staging": "ENVIRONMENT=staging ts-node scripts/deploy-with-state-management.ts",
        "deploy:state-aware:prod": "ENVIRONMENT=production ts-node scripts/deploy-with-state-management.ts",
        "deploy:ecr": "cdk deploy balancer-v3-shared-ecr --app 'ts-node lib/ecr-app.ts'",
        "destroy:ecr": "cdk destroy balancer-v3-shared-ecr --app 'ts-node lib/ecr-app.ts'",
        "synth:ecr": "cdk synth balancer-v3-shared-ecr --app 'ts-node lib/ecr-app.ts'"
    },
    "keywords": [
        "aws",
        "cdk",
        "infrastructure",
        "balancer",
        "defi"
    ],
    "author": "",
    "license": "MIT",
    "dependencies": {
        "@aws-sdk/client-acm": "^3.0.0",
        "@aws-sdk/client-application-auto-scaling": "^3.0.0",
        "@aws-sdk/client-cloudformation": "^3.0.0",
        "@aws-sdk/client-cloudwatch": "^3.734.0",
        "@aws-sdk/client-cloudwatch-logs": "^3.734.0",
        "@aws-sdk/client-ecr": "^3.846.0",
        "@aws-sdk/client-ecs": "^3.0.0",
        "@aws-sdk/client-elastic-load-balancing-v2": "^3.821.0",
        "@aws-sdk/client-iam": "^3.734.0",
        "@aws-sdk/client-kms": "^3.734.0",
        "@aws-sdk/client-lambda": "^3.734.0",
        "@aws-sdk/client-rds": "^3.0.0",
        "@aws-sdk/client-route-53": "^3.734.0",
        "@aws-sdk/client-s3": "^3.0.0",
        "@aws-sdk/client-secrets-manager": "^3.734.0",
        "@aws-sdk/client-sns": "^3.734.0",
        "@aws-sdk/client-sqs": "^3.734.0",
        "@aws-sdk/client-ssm": "^3.0.0",
        "@aws-sdk/client-sts": "^3.734.0",
        "@aws-sdk/client-wafv2": "^3.734.0",
        "aws-cdk-lib": "^2.156.0",
        "axios": "^1.9.0",
        "cdk-nag": "^2.36.16",
        "constructs": "^10.0.0",
        "source-map-support": "^0.5.21"
    },
    "devDependencies": {
        "@types/jest": "^29.5.0",
        "@types/node": "^20.10.0",
        "aws-cdk": "^2.120.0",
        "chalk": "^4.1.2",
        "commander": "^11.0.0",
        "jest": "^29.7.0",
        "ts-jest": "^29.3.4",
        "ts-node": "^10.9.0",
        "typescript": "^5.3.0"
    }
}
